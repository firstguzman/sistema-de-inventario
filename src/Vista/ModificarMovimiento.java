/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.ConexionBD;
import Controlador.ControllerProducto;
import static Vista.InicioSesion.frmenUsuario;
import static Vista.GestionDeUsuario.actor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/**
 *
 * @author sofiarodriguezmorales
 */
public class ModificarMovimiento extends javax.swing.JFrame {

    /**
     * Creates new form ModificarMovimiento
     */
    public ModificarMovimiento() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        jComboBoxMovimiento.addItem("Entrada");
        jComboBoxMovimiento.addItem("Salida");
    }
    
    ConexionBD ventana = new ConexionBD();
    Connection cm = ventana.conexion();
    ControllerProducto sqlProductos = new ControllerProducto();
    PreparedStatement pst;
   
    public Integer idMovimientoModificado = null;
    Integer cantidadProducto = null;
    Integer precioProducto = null;
    Integer cantidadMovimientoModificado = null;
    Integer precioUnidadMovimientoModificado = null;
    String  tipoMovimientoModificado = null;
    public String nombreProducto = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        jTextFieldDestino = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButtonCategorias = new javax.swing.JButton();
        jButtonUsuario = new javax.swing.JButton();
        jButtonFiltroBusqueda3 = new javax.swing.JButton();
        jButtonProductos3 = new javax.swing.JButton();
        jLabelDestino = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxMovimiento = new javax.swing.JComboBox<>();
        jTextFieldPrecio = new javax.swing.JTextField();
        jTextFieldCantidadUnidades = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonModificarMovimiento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel.setForeground(new java.awt.Color(41, 113, 222));
        jLabel.setText("Modificar movimiento");

        jTextFieldDestino.setText("Ingrese destino");
        jTextFieldDestino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldDestinoMouseClicked(evt);
            }
        });
        jTextFieldDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDestinoActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(41, 113, 222));

        jButtonCategorias.setBackground(new java.awt.Color(41, 113, 222));
        jButtonCategorias.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCategorias.setText("Categorias");
        jButtonCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCategoriasActionPerformed(evt);
            }
        });

        jButtonUsuario.setBackground(new java.awt.Color(41, 113, 222));
        jButtonUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUsuario.setText("Usuario");
        jButtonUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUsuarioActionPerformed(evt);
            }
        });

        jButtonFiltroBusqueda3.setBackground(new java.awt.Color(41, 113, 222));
        jButtonFiltroBusqueda3.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFiltroBusqueda3.setText("Filtro de busqueda");
        jButtonFiltroBusqueda3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltroBusqueda3ActionPerformed(evt);
            }
        });

        jButtonProductos3.setBackground(new java.awt.Color(41, 113, 222));
        jButtonProductos3.setForeground(new java.awt.Color(255, 255, 255));
        jButtonProductos3.setText("Productos");
        jButtonProductos3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProductos3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFiltroBusqueda3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCategorias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonProductos3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButtonUsuario)
                .addGap(7, 7, 7)
                .addComponent(jButtonFiltroBusqueda3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCategorias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonProductos3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelDestino.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelDestino.setText("Destino");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Cantidad de unidades");

        jLabelPrecio.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelPrecio.setText("Precio por unidad");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Movimiento");

        jComboBoxMovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona" }));
        jComboBoxMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMovimientoActionPerformed(evt);
            }
        });

        jTextFieldPrecio.setText("Ingrese precio");
        jTextFieldPrecio.setToolTipText("");
        jTextFieldPrecio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldPrecioMouseClicked(evt);
            }
        });
        jTextFieldPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrecioActionPerformed(evt);
            }
        });

        jTextFieldCantidadUnidades.setText("Ingrese cantidad");
        jTextFieldCantidadUnidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldCantidadUnidadesMouseClicked(evt);
            }
        });
        jTextFieldCantidadUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantidadUnidadesActionPerformed(evt);
            }
        });

        jButtonCancelar.setBackground(new java.awt.Color(255, 51, 51));
        jButtonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonModificarMovimiento.setBackground(new java.awt.Color(255, 153, 51));
        jButtonModificarMovimiento.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModificarMovimiento.setText("Modificar");
        jButtonModificarMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarMovimientoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelDestino)
                                    .addComponent(jComboBoxMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelPrecio)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jTextFieldCantidadUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonModificarMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(156, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(127, 127, 127))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCantidadUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabelPrecio))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDestino)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140)
                .addComponent(jButtonModificarMovimiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCancelar)
                .addGap(350, 350, 350))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

      public void actualizarCampos(Integer idMovimiento){
        try{
            pst = cm.prepareStatement("SELECT * FROM movimiento");
            ResultSet rs = pst.executeQuery();
            // iterar por el resulset
            while (rs.next()){  
                if (rs.getInt("id") == idMovimiento) {
                    System.out.println("actualizando campos...");
                    nombreProducto = rs.getString("producto");
                    tipoMovimientoModificado = rs.getString("tipo");
                    cantidadMovimientoModificado = rs.getInt("cantidad");
                    precioUnidadMovimientoModificado = rs.getInt("precio");
                    jTextFieldCantidadUnidades.setText(Integer.toString(rs.getInt("cantidad")));
                    jTextFieldPrecio.setText(Integer.toString(rs.getInt("precio"))); 
                    jTextFieldDestino.setText(rs.getString("destino"));         
                }            
            }
           
           
        }catch (SQLException ex){
            Logger.getLogger(GestionDeCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
     public void restaurarDatos(String nombreProducto){
       
        try{
            pst = cm.prepareStatement("SELECT * FROM producto");
            ResultSet rs = pst.executeQuery();
            System.out.println("nombre producto");
            System.out.println(nombreProducto);
            // iterar por el resulset
            while (rs.next()){  
                if (rs.getString("nombre").equals(nombreProducto)) {
                    System.out.println("restaurando...");
                    cantidadProducto = rs.getInt("cantidad");
                    precioProducto = rs.getInt("precioTotal");
                }            
            }
            System.out.println("cantidadProducto ");
            System.out.println(cantidadProducto);
           
            System.out.println("cantidadMovimientoModificado ");
            System.out.println(cantidadMovimientoModificado);
           
            if (tipoMovimientoModificado.equals("Entrada")){
                cantidadProducto = cantidadProducto - cantidadMovimientoModificado;
            }else{
                cantidadProducto = cantidadProducto + cantidadMovimientoModificado;
            }
           
           
        }catch (SQLException ex){
            Logger.getLogger(GestionDeCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }  
       
       
    }
     
     
     
      private void modificarMovimiento(String destino, String cantidadInsertada, String precioInsertado, String tipoMovimientoModificado, String tipoMovimiento, String nombreProducto, Integer cantidadProducto, Integer cantidadMovimientoModificado, Integer precioUnidadMovimientoModificado, Integer idMovimientoModificado){
       
        if (sqlProductos.chequeoMovimiento(jComboBoxMovimiento,jTextFieldCantidadUnidades, jTextFieldDestino, jTextFieldPrecio) == true){
           
            Integer cantidadInsertadaInt = sqlProductos.ConversionInteger(cantidadInsertada);
            Integer precioInsertadoInt = sqlProductos.ConversionInteger(precioInsertado);
           
            try{
               
                if(tipoMovimientoModificado.equals("Entrada")){
                   
                    //modificando un movimiento de entrada a movimiento de entrada
                    if(tipoMovimiento.equals("Entrada")){
                       
                        //update producto

                        //update cantidad
                        pst = cm.prepareStatement("UPDATE producto SET cantidad = cantidad - ? + ? WHERE nombre = ?");
                        pst.setInt(1, cantidadMovimientoModificado);
                        pst.setString(2, cantidadInsertada);
                        pst.setString(3, nombreProducto);
                        pst.executeUpdate();

                        //update precio
                        pst = cm.prepareStatement("UPDATE producto SET precioTotal = (? + ?) * ? WHERE nombre = ?");
                        pst.setInt(1, cantidadInsertadaInt);
                        pst.setInt(2, cantidadProducto);
                        pst.setInt(3, precioInsertadoInt);
                        pst.setString(4, nombreProducto);
                        pst.executeUpdate();
                       
                        //update precio unidad
                            pst = cm.prepareStatement("UPDATE producto SET precioUnidad = ? WHERE nombre = ?");
                            pst.setInt(1, precioInsertadoInt);
                            pst.setString(2, nombreProducto);
                            pst.executeUpdate();

                        //update movimiento
                       
                        pst = cm.prepareStatement("UPDATE movimiento SET precio = ?, cantidad = ? WHERE id = ?");
                        pst.setInt(1, precioInsertadoInt);
                        pst.setInt(2, cantidadInsertadaInt);
                        pst.setInt(3, idMovimientoModificado);
                        pst.executeUpdate();
                        System.out.println("entando saliendo ");
                        regresarProductos();
                       
                    //modificando un movimiento de entrada a movimiento de entrada
                    }else if(tipoMovimiento.equals("Salida")){
                       
                        if (cantidadProducto  - cantidadInsertadaInt < 0){
                            JOptionPane.showMessageDialog(null, "Esta operacion no es valida: cantidad de unidades inexistentes", "", JOptionPane.WARNING_MESSAGE);
                        }else{
                           
                            //update producto

                            //update cantidad
                            pst = cm.prepareStatement("UPDATE producto SET cantidad = cantidad - ? - ? WHERE nombre = ?");
                            pst.setInt(1, cantidadMovimientoModificado);
                            pst.setInt(2, cantidadInsertadaInt);
                            pst.setString(3, nombreProducto);
                            pst.executeUpdate();

                            //update precio
                            pst = cm.prepareStatement("UPDATE producto SET precioTotal = (? - ?)/? WHERE nombre = ?");
                            pst.setInt(1, cantidadProducto);
                            pst.setInt(2, cantidadMovimientoModificado);
                            pst.setInt(3, precioUnidadMovimientoModificado);
                            pst.setString(3, nombreProducto);
                            pst.executeUpdate();
                           
                            //update precio unidad
                            pst = cm.prepareStatement("UPDATE producto SET precioUnidad = ? WHERE nombre = ?");
                            pst.setInt(1, precioInsertadoInt);
                            pst.setString(2, nombreProducto);
                            pst.executeUpdate();

                            //update movimiento

                            pst = cm.prepareStatement("UPDATE movimiento SET tipo = ?, destino = ? ,precio = ?, cantidad = ? WHERE id = ?");
                            pst.setString(1, tipoMovimiento);
                            pst.setString(2, destino);
                            pst.setInt(3, 0);
                            pst.setInt(4, cantidadInsertadaInt);
                            pst.setInt(5, idMovimientoModificado);
                            pst.executeUpdate();
                             System.out.println("entrando saliendo ");
                            regresarProductos();
                           
                        }
                       
                       
                    }
                   
                   
                   
                   
                } else if(tipoMovimientoModificado.equals("Salida")){
                   
                     //modificando un movimiento de salida a movimiento de entrada
                    if(tipoMovimiento.equals("Entrada")){
                       
                        //update producto

                        //update cantidad
                        pst = cm.prepareStatement("UPDATE producto SET cantidad = cantidad + ? + ? WHERE nombre = ?");
                        pst.setInt(1, cantidadMovimientoModificado);
                        pst.setString(2, cantidadInsertada);
                        pst.setString(3, nombreProducto);
                        pst.executeUpdate();

                        //update precio
                        pst = cm.prepareStatement("UPDATE producto SET precioTotal = (? + ?) * ? WHERE nombre = ?");
                        pst.setInt(1, cantidadInsertadaInt);
                        pst.setInt(2, cantidadProducto);
                        pst.setInt(3, precioInsertadoInt);
                        pst.setString(4, nombreProducto);
                        pst.executeUpdate();
                       
                        //update precio unidad
                            pst = cm.prepareStatement("UPDATE producto SET precioUnidad = ? WHERE nombre = ?");
                            pst.setInt(1, precioInsertadoInt);
                            pst.setString(2, nombreProducto);
                            pst.executeUpdate();

                        //update movimiento

                            pst = cm.prepareStatement("UPDATE movimiento SET tipo = ?, destino = ? ,precio = ?, cantidad = ? WHERE id = ?");
                            pst.setString(1, tipoMovimiento);
                            pst.setString(2, " - ");
                            pst.setInt(3, precioInsertadoInt);
                            pst.setInt(4, cantidadInsertadaInt);
                            pst.setInt(5, idMovimientoModificado);
                            pst.executeUpdate();
                            System.out.println("saliendo entrando ");
                            regresarProductos();
                       
                    //modificando un movimiento de salida a movimiento de salida
                    }else if(tipoMovimiento.equals("Salida")){
                       
                        if (cantidadProducto  - cantidadInsertadaInt < 0){
                             JOptionPane.showMessageDialog(null, "Esta operacion no es valida: cantidad de unidades inexistentes", "", JOptionPane.WARNING_MESSAGE);
                        }else{
                            System.out.println("saliendo saliendo ");
                            //update producto

                            //update cantidad
                            pst = cm.prepareStatement("UPDATE producto SET cantidad = cantidad + ? - ? WHERE nombre = ?");
                            pst.setInt(1, cantidadMovimientoModificado);
                            pst.setInt(2, cantidadInsertadaInt);
                            pst.setString(3, nombreProducto);
                            pst.executeUpdate();


                            //update precio total
                            pst = cm.prepareStatement("UPDATE producto SET precioTotal = (? - ?) * ? WHERE nombre = ?");
                            pst.setInt(1, cantidadProducto);
                            pst.setInt(2, cantidadInsertadaInt);
                            pst.setInt(3, precioInsertadoInt);
                            pst.setString(4, nombreProducto);
                            pst.executeUpdate();
                           
                            //update precio unidad
                            pst = cm.prepareStatement("UPDATE producto SET precioUnidad = ? WHERE nombre = ?");
                            pst.setInt(1, precioInsertadoInt);
                            pst.setString(2, nombreProducto);
                            pst.executeUpdate();


                            //update movimiento

                            pst = cm.prepareStatement("UPDATE movimiento SET  destino = ? ,precio = ?, cantidad = ? WHERE id = ?");
                            pst.setString(1, destino);
                            pst.setInt(2, 0);
                            pst.setInt(3, cantidadInsertadaInt);
                            pst.setInt(4, idMovimientoModificado);
                            pst.executeUpdate();

                           
                            regresarProductos();
                           
                           
                           
                        }
                    }
                   
                }
               
               
            }catch(SQLException ex){
               
            }
           
           
        }
       
    }
      
      private void regresarProductos(){
       
        InfoProducto Producto = new InfoProducto();
        Producto.setVisible(true);
        this.dispose();
       
        Producto.jLabelProducto.setText(nombreProducto);
        Producto.MostrarInfo(nombreProducto);
   }
     
     
 
    
    private void jTextFieldDestinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldDestinoMouseClicked
        // TODO add your handling code here:
        jTextFieldDestino.setText(null);
    }//GEN-LAST:event_jTextFieldDestinoMouseClicked

    private void jTextFieldDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDestinoActionPerformed

    private void jButtonCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCategoriasActionPerformed
        // TODO add your handling code here:
        GestionDeCategoria GestionDeCategoria = new GestionDeCategoria();
        GestionDeCategoria.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonCategoriasActionPerformed

    private void jButtonUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUsuarioActionPerformed
        this.dispose();
        try {
            frmenUsuario = new GestionDeUsuario(actor);
            frmenUsuario.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(AñadirUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonUsuarioActionPerformed

    private void jButtonFiltroBusqueda3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltroBusqueda3ActionPerformed
        FiltroDeBusqueda FiltroDeBusqueda = new FiltroDeBusqueda();
        FiltroDeBusqueda.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonFiltroBusqueda3ActionPerformed

    private void jButtonProductos3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProductos3ActionPerformed
        // TODO add your handling code here:
        GestionDeProducto GestionDeProducto = new GestionDeProducto();
        GestionDeProducto.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonProductos3ActionPerformed

    private void jComboBoxMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMovimientoActionPerformed
    if ("Entrada".equals(jComboBoxMovimiento.getSelectedItem().toString())){
            jTextFieldDestino.setVisible(false);
            jTextFieldPrecio.setVisible(true);
            jLabelDestino.setVisible(false);
            jLabelPrecio.setVisible(true);
        }else if ("Salida".equals(jComboBoxMovimiento.getSelectedItem().toString())){
            jTextFieldPrecio.setVisible(false);
            jTextFieldDestino.setVisible(true);
            jLabelPrecio.setVisible(false);
            jLabelDestino.setVisible(true);
            
        }
    }//GEN-LAST:event_jComboBoxMovimientoActionPerformed

    private void jTextFieldPrecioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPrecioMouseClicked
        // TODO add your handling code here:
        jTextFieldPrecio.setText(null);
    }//GEN-LAST:event_jTextFieldPrecioMouseClicked

    private void jTextFieldPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrecioActionPerformed

    private void jTextFieldCantidadUnidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldCantidadUnidadesMouseClicked
        // TODO add your handling code here:
        jTextFieldCantidadUnidades.setText(null);
    }//GEN-LAST:event_jTextFieldCantidadUnidadesMouseClicked

    private void jTextFieldCantidadUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantidadUnidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantidadUnidadesActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        InfoProducto Producto = new InfoProducto();
        Producto.setVisible(true);
        Producto.MostrarInfo(nombreProducto);
        Producto.jLabelProducto.setText(nombreProducto);
        this.dispose();

    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonModificarMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarMovimientoActionPerformed
        
         //1ero se restaura
            restaurarDatos(nombreProducto);
            //2do se toman datos
           
            String destino = jTextFieldDestino.getText();
            String cantidadInsertada = jTextFieldCantidadUnidades.getText();
            String precioInsertado = jTextFieldPrecio.getText();
            String tipoMovimiento = jComboBoxMovimiento.getSelectedItem().toString();
           
            //3ero se modifca
            
            modificarMovimiento(destino, cantidadInsertada, precioInsertado, tipoMovimientoModificado, tipoMovimiento, nombreProducto, cantidadProducto, cantidadMovimientoModificado,  precioUnidadMovimientoModificado, idMovimientoModificado);
        
         
    }//GEN-LAST:event_jButtonModificarMovimientoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ModificarMovimiento().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCategorias;
    private javax.swing.JButton jButtonFiltroBusqueda3;
    private javax.swing.JButton jButtonModificarMovimiento;
    private javax.swing.JButton jButtonProductos3;
    private javax.swing.JButton jButtonUsuario;
    private javax.swing.JComboBox<String> jComboBoxMovimiento;
    public javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelDestino;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextFieldCantidadUnidades;
    private javax.swing.JTextField jTextFieldDestino;
    private javax.swing.JTextField jTextFieldPrecio;
    // End of variables declaration//GEN-END:variables
}
